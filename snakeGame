import pygame
import time
import random

pygame.init()


WIDTH, HEIGHT = 800, 600
BLOCK_SIZE = 20


WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
BLACK = (0, 0, 0)

screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")


clock = pygame.time.Clock()
font = pygame.font.SysFont("bahnschrift", 25)

def display_score(score):
    value = font.render(f"Your Score: {score}", True, WHITE)
    screen.blit(value, [10, 10])

def snake(snake_list):
    for block in snake_list:
        pygame.draw.rect(screen, GREEN, [block[0], block[1], BLOCK_SIZE, BLOCK_SIZE])

def game_loop():
    game_over = False
    game_close = False

    # Initial snake position and movement
    x, y = WIDTH // 2, HEIGHT // 2
    x_change, y_change = 0, 0

    # Snake properties
    snake_list = []
    snake_length = 1
    score = 0

    # Food position
    food_x = round(random.randrange(0, WIDTH - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
    food_y = round(random.randrange(0, HEIGHT - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE

    while not game_over:

        while game_close:
            screen.fill(BLACK)
            message = font.render(f"Game Over! Final Score: {score}. Press Q-Quit or C-Play Again", True, RED)
            screen.blit(message, [WIDTH // 6, HEIGHT // 3])
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_x:  # Close window when X is pressed
                    game_over = True
                elif event.key == pygame.K_a and x_change == 0:  # Prevent 180 degree turns
                    x_change = -BLOCK_SIZE
                    y_change = 0
                elif event.key == pygame.K_d and x_change == 0:
                    x_change = BLOCK_SIZE
                    y_change = 0
                elif event.key == pygame.K_w and y_change == 0:
                    y_change = -BLOCK_SIZE
                    x_change = 0
                elif event.key == pygame.K_s and y_change == 0:
                    y_change = BLOCK_SIZE
                    x_change = 0


        x += x_change
        y += y_change

     
        if x >= WIDTH or x < 0 or y >= HEIGHT or y < 0:
            game_close = True

        screen.fill(BLACK)
        pygame.draw.rect(screen, BLUE, [food_x, food_y, BLOCK_SIZE, BLOCK_SIZE])

        snake_head = [x, y]
        snake_list.append(snake_head)
        if len(snake_list) > snake_length:
            del snake_list[0]

        # Check collision with itself
        for block in snake_list[:-1]:
            if block == snake_head:
                game_close = True

        snake(snake_list)
        display_score(score)

        pygame.display.update()

      
        if x == food_x and y == food_y:
            food_x = round(random.randrange(0, WIDTH - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
            food_y = round(random.randrange(0, HEIGHT - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
            snake_length += 1
            score += 1

       
        clock.tick(15)

    pygame.quit()
    quit()


game_loop()
